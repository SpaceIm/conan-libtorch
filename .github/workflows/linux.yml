on: [push, pull_request]

jobs:
  splitByBuildTypesTrue:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        compiler:
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "7",  buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "7",  buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "8",  buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "8",  buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "9",  buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "9",  buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "10", buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "10", buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "8",  buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "8",  buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "9",  buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "9",  buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "10", buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "10", buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "11", buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "11", buildType: "Release" }
    name: ${{ matrix.compiler.name }} ${{ matrix.compiler.version }} ${{ matrix.compiler.buildType }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.2'
      - name: Install Conan
        run: |
          pip install bincrafters_package_tools
          conan user
      - name: Run
        env:
          CONAN_BUILD_TYPES: ${{ matrix.compiler.buildType }}
          CONAN_SYSREQUIRES_MODE: enabled
          CC: ${{ matrix.cc }}-${{ matrix.version }}
          CXX: ${{ matrix.cxx }}-${{ matrix.version }}
        run: |
          export CONAN_${{ matrix.compiler.name }}_VERSIONS="${{ matrix.compiler.version }}"
          python build.py
