on: [push, pull_request]

jobs:
  splitByBuildTypesTrue:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        compiler:
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "5",  versionForConan: "5",   buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "5",  versionForConan: "5",   buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "6",  versionForConan: "6",   buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "6",  versionForConan: "6",   buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "7",  versionForConan: "7",   buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "7",  versionForConan: "7",   buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "8",  versionForConan: "8",   buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "8",  versionForConan: "8",   buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "9",  versionForConan: "9",   buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "9",  versionForConan: "9",   buildType: "Release" }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "10", versionForConan: "10",  buildType: "Debug"   }
        - { name: "GCC",   cc: "gcc",   cxx: "g++",     version: "10", versionForConan: "10",  buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "5",  versionForConan: "5.0", buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "5",  versionForConan: "5.0", buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "6",  versionForConan: "6.0", buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "6",  versionForConan: "6.0", buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "7",  versionForConan: "7.0", buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "7",  versionForConan: "7.0", buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "8",  versionForConan: "8",   buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "8",  versionForConan: "8",   buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "9",  versionForConan: "9",   buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "9",  versionForConan: "9",   buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "10", versionForConan: "10",  buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "10", versionForConan: "10",  buildType: "Release" }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "11", versionForConan: "11",  buildType: "Debug"   }
        - { name: "CLANG", cc: "clang", cxx: "clang++", version: "11", versionForConan: "11",  buildType: "Release" }
    name: ${{ matrix.compiler.name }} ${{ matrix.compiler.version }} ${{ matrix.compiler.buildType }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.2'
      - name: Install Conan
        run: |
          pip install bincrafters_package_tools
          conan user
      - name: Install gcc
        if: matrix.compiler.name == 'GCC'
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y g++-${{ matrix.compiler.versionForConan }}
      - name: Install clang
        if: matrix.compiler.name == 'CLANG'
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y clang-${{ matrix.compiler.versionForConan }} \
                                  lldb-${{ matrix.compiler.versionForConan }} \
                                  lld-${{ matrix.compiler.versionForConan }} \
                                  clang-format-${{ matrix.compiler.versionForConan }}
      - name: Run
        env:
          CONAN_BUILD_TYPES: ${{ matrix.compiler.buildType }}
          CONAN_SYSREQUIRES_MODE: enabled
          CC: ${{ matrix.compiler.cc }}-${{ matrix.compiler.version }}
          CXX: ${{ matrix.compiler.cxx }}-${{ matrix.compiler.version }}
        run: |
          export CONAN_${{ matrix.compiler.name }}_VERSIONS="${{ matrix.compiler.versionForConan }}"
          python build.py
